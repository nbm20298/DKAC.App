@using DKAC.Repositories
@model IEnumerable<Departments>

@{
    ViewData["Title"] = "Index";
    var managerName = ViewBag.ManagerName as List<string>;
}
<section class="vh-75">
    <div class="container-fluid">
        <h1 class="h1 fw-bold mb-5">
            Department List
        </h1>
        <span class="float-right"><a asp-action="Create" class="btn btn-outline-primary h1 mb-5" style="height: 3em">Create New</a></span>
        @if (Model.Any())
        {
            <table class="table">
                <thead class="h1 m-2">
                    <tr>
                        <th>    
                            Department Name
                        </th>
                        <th>
                            Manager Name
                        </th>
                        <th>
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody class="h3">
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.ElementAt(i).DepartmentName)
                            </td>
                            <td>
                                @managerName[i]
                            </td>
                            <td class="d-flex">
                                @Html.ActionLink("Delete", "Delete", new { DepartmentID = Model.ElementAt(i).DepartmentID })
                                <p class="ms-3 me-3">||</p>
                                @Html.ActionLink("DeleteManager", "DeleteManager", new { DepartmentID = Model.ElementAt(i).DepartmentID })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pagination">
                @if (ViewBag.PageNumber > 1)
                {
                    <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber - 1 })" class="btn btn-secondary">Previous</a>
                }
                @if (ViewBag.HasNextPage)
                {
                    <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber + 1 })" class="btn btn-primary">Next</a>
                }
            </div>
        }
    </div>
</section>