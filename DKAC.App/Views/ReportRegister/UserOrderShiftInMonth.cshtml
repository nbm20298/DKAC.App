@using DKAC.Repositories
@using System.Globalization
@model IEnumerable<Departments>

@{
    ViewData["Title"] = "UserOrderShiftInDay";
    var numberFormatInfo = new NumberFormatInfo
            {
                NumberGroupSeparator = ".",
                NumberDecimalSeparator = ","
            };
}
<section class="vh-75">
    <div class="container-fluid">
        <h1 class="h1 fw-bold  text-center mb-5">
            THỐNG KÊ ĂN CA THÁNG @DateTime.Now.Month Năm @DateTime.Now.Year
        </h1>

        <table class="table m-5 border border-dark">
            <thead class="h1 text-center">
                <tr>
                    <th class=" border border-dark">
                        STT
                    </th>
                    <th class=" border border-dark">
                        FullName
                    </th>
                    <th class=" border border-dark">
                        Ca 1
                    </th>
                    <th class=" border border-dark">
                        Ca 2
                    </th>
                    <th class=" border border-dark">
                        Ca 3
                    </th>
                    <th class=" border border-dark">
                        Tổng
                    </th>
                    <th class=" border border-dark">
                        Thành tiền
                    </th>
                </tr>
            </thead>
            <tbody class="h3">
                @foreach (var department in Model)
                {
                    <tr colspan="4" class="font-weight-bold border border-dark">
                        <td colspan="4" >@department.DepartmentName</td>
                    </tr>
                    int stt = 1;
                    foreach (var userOrder in department.UserOrders)
                    {
                        <tr class="">
                            <td class=" border border-dark text-center">@stt</td>
                            <td class=" border border-dark">@userOrder.FullName</td>
                            <td class=" border border-dark">@(userOrder.Shift1Quantity > 0 ? userOrder.Shift1Quantity.ToString() : " ")</td>
                            <td class=" border border-dark">@(userOrder.Shift2Quantity > 0 ? userOrder.Shift2Quantity.ToString() : " ")</td>
                            <td class=" border border-dark">@(userOrder.Shift3Quantity > 0 ? userOrder.Shift3Quantity.ToString() : " ")</td>
                            <td class=" border border-dark">@(userOrder.Shift1Quantity + userOrder.Shift2Quantity + userOrder.Shift3Quantity)</td>
                            <td class=" border border-dark">@String.Format(numberFormatInfo, "{0:N0}", (userOrder.Shift1Quantity + userOrder.Shift2Quantity + userOrder.Shift3Quantity) * 15000)</td>
                        </tr>
                        stt++;
                    }
                }
            </tbody>
        </table>
        @* <div class="pagination">
        @if (ViewBag.PageNumber > 1)
        {
        <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber - 1 })" class="btn btn-secondary">Previous</a>
        }
        @if (ViewBag.HasNextPage)
        {
        <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber + 1 })" class="btn btn-primary">Next</a>
        }
        </div> *@
    </div>
</section>