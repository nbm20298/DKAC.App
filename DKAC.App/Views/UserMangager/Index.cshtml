@using DKAC.Repositories
@model IEnumerable<Users>

@{
    ViewData["Title"] = "Index";
    int index = 1;
    var departmentNames = ViewBag.DepartmentNames as List<string>;
    var roleNames = ViewBag.RoleNames as List<string>;
}
<section class="vh-75">
    <div class="container-fluid">
        <h1 class="h1 fw-bold mb-5">
            Users List
        </h1>
        @if (Model.Any())
        {
            <table class="table m-2">
                <thead class="h1">
                    <tr>
                        <th>STT</th>
                        <th>DepartmentName</th>
                        <th>Role</th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UserName)
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody class="h3">
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>@index</td>
                            <td>@departmentNames[i]</td>
                            <td>@roleNames[i]</td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.ElementAt(i).FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.ElementAt(i).UserName)
                            </td>
                            <td class="d-flex">
                                @Html.ActionLink("Delete", "Delete", new { UserID = Model.ElementAt(i).UserID })
                                <p class="ms-3 me-3">||</p>
                                <a asp-controller="UserMangager" asp-action="UpdatePassword" asp-route-userId="@Model.ElementAt(i).UserID">Update Password</a>
                            </td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>
            <div class="pagination">
                @if (ViewBag.PageNumber > 1)
                {
                    <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber - 1 })" class="btn btn-secondary">Previous</a>
                }
                @if (ViewBag.HasNextPage)
                {
                    <a href="@Url.Action("Index", new { pageNumber = ViewBag.PageNumber + 1 })" class="btn btn-primary">Next</a>
                }
            </div>
        }
    </div>
</section>
